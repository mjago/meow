// Code generated by go run make_block.go. DO NOT EDIT.

// +build !noasm

#include "textflag.h"

TEXT Â·checksum128(SB),0,$0-56
#define SEED R8
	MOVQ     seed+0(FP), SEED
#define DST_PTR DI
	MOVQ     dst_ptr+8(FP), DST_PTR
#define SRC_PTR SI
	MOVQ     src_ptr+32(FP), SRC_PTR
#define SRC_LEN AX
	MOVQ     src_len+40(FP), SRC_LEN

	// Load zero "IV".
	PXOR     X0, X0
	PXOR     X1, X1
	PXOR     X2, X2
	PXOR     X3, X3
	PXOR     X4, X4
	PXOR     X5, X5
	PXOR     X6, X6
	PXOR     X7, X7
	PXOR     X8, X8
	PXOR     X9, X9
	PXOR     X10, X10
	PXOR     X11, X11
	PXOR     X12, X12
	PXOR     X13, X13
	PXOR     X14, X14
	PXOR     X15, X15

	// Handle full 256-byte blocks.

loop:
	CMPQ     SRC_LEN, $256
	JL       residual

	// Hash block.
	VAESDEC  0(SRC_PTR), X0, X0
	VAESDEC  16(SRC_PTR), X1, X1
	VAESDEC  32(SRC_PTR), X2, X2
	VAESDEC  48(SRC_PTR), X3, X3
	VAESDEC  64(SRC_PTR), X4, X4
	VAESDEC  80(SRC_PTR), X5, X5
	VAESDEC  96(SRC_PTR), X6, X6
	VAESDEC  112(SRC_PTR), X7, X7
	VAESDEC  128(SRC_PTR), X8, X8
	VAESDEC  144(SRC_PTR), X9, X9
	VAESDEC  160(SRC_PTR), X10, X10
	VAESDEC  176(SRC_PTR), X11, X11
	VAESDEC  192(SRC_PTR), X12, X12
	VAESDEC  208(SRC_PTR), X13, X13
	VAESDEC  224(SRC_PTR), X14, X14
	VAESDEC  240(SRC_PTR), X15, X15

	// Update source pointer.
	ADDQ     $256, SRC_PTR
	SUBQ     $256, SRC_LEN
	JMP      loop

residual:
	RET      
#undef SEED
#undef DST_PTR
#undef SRC_PTR
#undef SRC_LEN
